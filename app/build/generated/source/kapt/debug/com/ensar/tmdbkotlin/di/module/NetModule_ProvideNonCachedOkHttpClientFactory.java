// Generated by Dagger (https://google.github.io/dagger).
package com.ensar.tmdbkotlin.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

public final class NetModule_ProvideNonCachedOkHttpClientFactory implements Factory<OkHttpClient> {
  private final NetModule module;

  public NetModule_ProvideNonCachedOkHttpClientFactory(NetModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return Preconditions.checkNotNull(
        module.provideNonCachedOkHttpClient(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static NetModule_ProvideNonCachedOkHttpClientFactory create(NetModule module) {
    return new NetModule_ProvideNonCachedOkHttpClientFactory(module);
  }

  public static OkHttpClient proxyProvideNonCachedOkHttpClient(NetModule instance) {
    return Preconditions.checkNotNull(
        instance.provideNonCachedOkHttpClient(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
