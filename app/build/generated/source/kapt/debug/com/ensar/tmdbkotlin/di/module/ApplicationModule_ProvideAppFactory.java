// Generated by Dagger (https://google.github.io/dagger).
package com.ensar.tmdbkotlin.di.module;

import com.ensar.tmdbkotlin.App;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApplicationModule_ProvideAppFactory implements Factory<App> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideAppFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public App get() {
    return Preconditions.checkNotNull(
        module.provideApp(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApplicationModule_ProvideAppFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideAppFactory(module);
  }

  public static App proxyProvideApp(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.provideApp(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
